{
  "app": {
    "config": "./markdown-to-json/settings/tutorials.json",
    "cwd": "./",
    "deterministicOrder": false,
    "display": true,
    "dist": "./markdown-to-json/outputs/tutorials.json",
    "filePattern": "*.mdx",
    "ignore": "",
    "port": 3001,
    "server": false,
    "src": "./docs/tutorials",
    "name": "tutorials",
    "metadata": true,
    "version": "1.6.1"
  },
  "data": [
    {
      "contents": "Introduction Building a chatbot on Kata Platform is quick and easy even with a lack of programming knowledge In this tutorial we will learn how to create a simple bot on LINE Messenger to order a pizza We will also learn how to train your bot with NL Studio Let s start by looking at this bot diagram or commonly called conversation tree Conversation tree is an overview of chatbot functionalities In this conversation tree we break down the process of ordering pizza and the types of bot action we want to use on each state Sign up to Kata Platform Create an account on Kata Platform to start building chatbot On your browser open and click Sign Up Then fill the form with a username an email and an account type Continue by clicking Sign Up You will get a confirmation email once our team has verified your account You may follow the instructions provided in the confirmation email to activate and start using your account Create a Project Login to Kata Platform On your browser open platform kata ai login and enter your username amp password Click Login to continue Create a project After you logged in you will be taken to the Project Page Click on Create Project and fill in the form Each project contains one bot design one NL and one CMS NLU language is used to determine which language model you want to use Currently we support Bahasa Indonesia and English You can also choose NLU Visibility to be public or private If you choose public all Kata Platform users can utilize your NLU using root and inherit function Create Fallback Flow Create fallback flow Once you create a project you will be redirected to the Bot Studio menu Now we are going to learn how to create a flow Flow is a container of intent state and action A flow typically represents a linear process The first flow that we will create is a Fallback Flow Its purpose is to handle undefined users input or commonly called else condition state In this case the else condition is everything that is not Start Order You may find a flow that is created automatically by the system or default flow We will delete that flow by pressing more button and then Delete Next click Create Flow button to create fallback flow Set flow to active persistent and default Create fallback intent After you have created fallback flow we will create new intent by pressing the Intents tab on the sub menu Then we will create a new intent for fallback flow Click Create Intent button to create Then fill in the form as follows Create State init Next we will create a state called init Click the button at the bottom right of your screen Fill state with name init on Overview tab and set it to initial state and end state as shown below Enabling Initial State and End State will make init the first and the last flow to be checked by the bot when there isn t any flow that matches a user s input Now we will create a bot response to display an apology message Click Add actions button to create a response Container for creating action will appear Create Action Text in State init Click on button to create a new action Choose action type Text Then fill in the form Click on Create Action button Create Self Transition in State Init The last step to finalize fallback flow is to create self transition for init state Self transition is required to avoid error when the next state is not available Click on Transitions and enable Self Transition Click Create button Your screen should look like this Create Order Flow Next we will create Start Order flow to handle pizza order Create Flow Order First step is to create another flow called order Created flow will be shown like this Create Keyword NLUs for Order In this step we will define the NLU Natural Language Understanding to trigger order flow NLU is used to translate user inputs into data that machine can understand There are many types of NLU but the type that we will use in this particular flow is called keyword To define the NLU go to NLUs menu Next click on Create NLU Choose Keyword type and enter keywords that represents order such as order pls order order pza Successfully created NLU looks like this Create Intent for Order Each flow requires an intent to classify user s inquiry and trigger matching flow So our next step is to set initial intent for order flow Go back to Conversation Flow menu and click on order flow then click on Intents tab Previously you already created keyword NLUs called order We will set that keyword as intent in order flow Map the NLU on classifier section Click Create to create the intent Your screen should look like this Create a State Named init Every flow must have at least one state Because we haven t created any state in order flow we have to create one Let s create a state called init Click Create button to create initial state Next we will define how the bot will respond to user who entered order flow Create Action for Pizza Menu As seen on the conversation tree below the first message in order flow is Show Pizza Type Create a State to Show Pizza type in Text Action Type To get started we need to create a state named showPizza on order flow Click on button in Conversation Flow menu Let s begin by creating an action called pizzaOptions This action will inform users in text about our available pizza menu Click on button to create an action and choose Text as action type Fill in Text action type to inform our pizza menu Click on Create Action to finalize Next step is to create an action called askOptions Click on Create Action button Your form should look like this Then you have to make self transition in Transition tab as follow Click Create to create the state Successfully created state will look like this Update showPizza state Into Show Pizza Menu in Carousel Action Type Previous step is an example to create action to show pizza menu in text Let s try to update the state into Carousel action type To update the state click on showPizza state and an update state form will appear Then remove all actions in the state by clicking x on each action After removing available actions we will create an action called pizzaMenu as Carousel action type Click on Add actions button then click on button to create a new action Choose Carousel action type to continue Enter pizzaMenu as name Fill in the carousel content by clicking Add carousel button then click on Add action button to define the label and type Next click on Add Payload button to enter key and value Fill in first carousel with this data Title Pepperoni Text This is the favorite of Peps Thumbnail Image Url Actions Label Pepperoni Type Postback Payload key type value pizza key pizza value Pepperoni Fill in second carousel with this data Title Veggie Lovers Text Vegie vegie stay healthy Thumbnail Image Url Actions Label Veggie Lovers Type Postback Payload key type value pizza key pizza value Veggie Lovers Your first form should look like this Your second form should look like this Finalize this step by clicking Create Action It should look like this Once the bot displays a carousel containing the type for pizza menu its next step is to ask user to select the pizza Click Add actions button to trigger drop down list then choose askOptions After you select askOptions action click Create Action button to finalize this step Your form should look like this Click Update to update the state Create Intent to Choose A Pizza Now we have to create an intent called pizzaChosen to handle user s input after they have selected a pizza type Click on Intent menu in order flow Click on Create Intent and create intent as follow Successfully created intent looks like this Create Transition between init and showPizza Now we will create a transition between two states that we have created before Click the green dot on init state and a connector line will appear Connect that line to showPizza state If you do it right a Create Transition form will appear Fill in the form with these data and click Create Create reenter intent Next we will add reenter intent so the bot can return to its previous state after triggering fallback state Create the intent in order flow Create Action for Asking Pizza Quantity In this step we will learn how to create Ask quantity state Create pizzaQuantity state In this step we will create pizzaQuantity state to handle order quantity The type of action we will use is in this state is Text Click on button on order flow and fill the form as follows Then you have to make self transition in Transition tab as follow Result Create NLUs quantity Afterwards we have to handle user s input with NLUs Because we only allowed number from 1 to 9 we will create a limitation in regex format Click on Create NLUs and follow this screenshot Successfully created NLU will be shown like this Create Intent quantity After we created the NLU we will add an intent to respond user s input In order flow click on Create Intent and fill in the form Successfully created intent will look like this Create Transition between showPizza and pizzaQuantity Now we have to create a transition between showPizza and pizzaQuantity We will also store payload pizza value into context pizza Click on the blue dot on showPizza and drag the line to pizzaQuantity state to create the transition Create Transition form will appear after you have successfully connected the states Created transition will look like this Create Confirmation Action Our next step is creating Ask confirmation state Create YESNO keyword NLUs First we will create a keyword NLU to handle yes and no Click on Create NLUs and fill in as follows Successfully created NLU will look like this Create confirmPizza state Now we will create confirmPizza state to handle order confirmation We will also store chosen pizza amp quantity information in this state Select order flow and click on button to create confirmPizza state Add mapping in onTransit tab Don t forget to add self transition in a state Click Create Action Your screen should look like this Create a transition from pizzaQuantity to confirmPizza We will make a transition by storing value mapping from pizza quantity and chosen pizza type Click the blue dot on pizzaQuantity and drag the line to confirmPizza state to create a transition Create Transition form will appear after you successfully connected the states Result will be shown as follows Create intent yesno Previously we already made an NLU containing yes and no keywords We will use that NLU as a classifier on an intent First of all we will create an intent in order flow for the keyword yes Then we will create an intent for keyword no Both intent will appear as follows Create done state In done state we will complete the order by saying thank you and end the conversation We will also set a condition when a user wants to cancel the order So in this state we will create two actions sayThanks and sayCancel Also don t forget to add self transition in the state Result Create a transition from confirmPizza to done Next we will connect confirmPizza state to done state Because done is the last state we will set it as default transition Connect confirmPizza to done by clicking the blue dot and drag the line to connect the states Create Transition form will appear after you have successfully connected the states Final flow Publish Your Bot To save your work click on Publish button located at the top right of your screen Fill in the changelog as initial version of pizza bot for future reference Click Publish to continue Every time you publish a bot it will record a hash number similar to Git s hash number in Revision List Testing Your Chatbot Click on Test Chatbot on Bot Studio then type order to initialize order flow Check on the rest of the flow and make sure everything you ve made works Deploy Your Chatbot Now we will try to deploy our chatbot to LINE Messenger Create deployment First of all we have to create a deployment first Find the Deployment menu on the left sidebar Click on Create Deployment button on top right Choose Patch on Deployment Version Succesfully created deployment looks like this Create Environment Kata Platform 3 0 allows you to set up 3 separate environments in your project Development Staging and Production Inside each environment you can add as many messaging channel as you like You have to setup environment first before integrating to messaging channel In this tutorial we will try to setup Production environment Click on Environment menu under Deploy and you will be shown 3 available environments Click Create Environment button in Production The first field we have to fill in is deployment version Choose 0 0 1 shown on the previous step as deployment version in Production Another field we have to fill in is environment URL This URL is used to access CMS Client later Successfully created environment will look like this Next we need to create channel inside the environment Click on Create Channel on Production environment and you will be redirected to Create Channel page Next click Create Channel and fill in as follows Let s setup LINE developer console so you can fill in fields highlighted with red box Registration to LINE Developer console Create LINE account To sign up for a LINE developer account you have to have a LINE account by installing LINE application either desktop or mobile app After you successfully registered sign in to In LINE Developer Console click Log In Click on Log in with LINE Enter your email and password After you successfully logged in you will be redirected to provider list dashboard Create a Provider Click Create New Provider Fill in provider name Click Confirm to continue You will have to re confirm the provider name since it cannot be changed later Click Create to confirm Setup Channel for LINE Integration Setup channel in Messaging API by clicking Create Channel on Messaging API Fill in the form as follows Next you have to choose Developer Trial as Plan Accept Terms of Use from LINE then click Create Successfuly created channel will look like this Integration LINE and Your Chatbot Click on created channel to fill in Channel Access Token and Channel Secret Here is the guideline to fill in those fields Fill in Channel Access Token field Click Issue in Messaging Settings section Then issue dialog will pop up Click on Issue to continue Then copy Channel Access Token below and paste it on Create Channel form in Kata Platform Fill in Channel Secret field In Basic Information copy Channel Secret from LINE to Kata Platform Final result in Kata Platform will look like this Click Create to generate webhook URL from Kata Platform After webhook URL is generated go to Messaging Settings in LINE developer console to enable webhook Please check that you already enable the webhook by click on Enable in Use Webhoooks section which placed above Webhook URL field Click Update then paste the webhook URL to LINE developer console Click Update then click Verify Next disable auto reply messages and greeting messages Voila You have successfully deployed your bot to LINE Messenger Scan the QR Code in LINE Developer Console to add the bot Then test to scan QR Code",
      "excerpt": "Introduction Building a chatbot on Kata Platform is quick and easy even with a lack of programming knowledge In this tutorial we will learn how to create a simple bot on",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.454Z",
        "lastModified": "2022-06-07T01:36:57.454Z",
        "size": 34541,
        "formattedSize": "33.7 KB",
        "absolutePath": "/tutorials/bot-studio"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "bot-studio",
      "title": "Bot Studio Tutorial",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-cms.webp",
      "prev": "hello-world-tutorial",
      "next": "nl-studio-tutorial",
      "date": "2018-07-07T07:00:00+07:00"
    },
    {
      "contents": "Kata Platform is a platform to create chatbots and train them with Natural Language Processing NLP You can create any chatbots for any use cases such as FAQ campaign customer service handover to human agents and more Currently we ve launched Instagram chatbot with various features such as End users can receive automated replies by creating an Instagram story that mentioned brand receive automated replies by replying to brand Instagram story receive bot responses in image text quick reply ice breaker for first time users only and generic template similar with a carousel in other messaging platforms Learn more about Instagram DM Automation tutorials how to use instagram messaging automation in your project In this tutorial we will create an Instagram chatbot that is able to send conversations to human agents also known as Agent Handover We will use the Kata Omnichat dashboard to connect chatbots with human agents Learn more about Omnichat kata omnichat introduction what is kata omnichat Chatbot Flow Before we jump into the tutorial let s see the scenario for the conversation We will create a chatbot using _keywords_ Conversation Flow Table Conversation flow table details can be seen here Create Project Objective Register your new account and login to the Platform 1 Go to and click Sign Up to create new account 2 Input required fields in sign up page Username email address role and captcha 3 Go to your registered email inbox You will receive an email to verify your account and input your password 4 When you click the Confirm Email button in the verification email you will be redirected to set up a password Insert your password and confirm the password 5 You will be redirected to the Login Page Input your username and password to continue Objective Create new chatbot project Login to Kata Platform and create a project 1 Open your browser then open the URL and enter your username amp password 2 Click Login to continue 3 Click on Create Project and fill in the form Each project contains one bot design one NL and one CMS Create Handover Flow Objective Define a flow Create a flow name handover We will use 1 flow for this simple bot 1 Click Create Flow button on the Conversation Flow screen 2 Create flow handover other fields are left blank Then click Create Create init state 1 Click icon in the bottom right to create a new state 2 Create state init and click the toggle to turn on Initial State and other fields are left blank Then click Create Create Greetings State to Respond End User s who Greet Bot via Direct Message In this part we are going to create a greeting flow to respond to end users who greet the brand s bot via direct message but not via Ice Breaker For example the end user says hi to the bot and does not want to choose via Ice Breaker Learn more about Ice Breaker kata omnichat manage inbox settings set up ice breaker Objective Create greetings state to define how to respond Create greetingsState as bot response to show keywords menu 1 Create another state by clicking the icon in the bottom right to create a new state named greetingsState 2 Click Add action then click in the action box to create a new action 3 When all actions available are shown then choose Text 4 Input action name greetingsText 5 Next click the Add Variant button to fill in with this text Halo selamat datang di layanan CS Bank ABC n nUntuk memulai pilih menu yang tersedia n nKetik 1 untuk melihat FAQ nKetik 2 untuk melihat promo yang tersedia nKetik 3 untuk melihat lokasi Bank ABC nKetik 4 untuk berbicara dengan CS Bank ABC n n Cukup ketik angka pilihannya ya 6 Click Create Action Set the state into self transition The self transition will make the actions under state will be repeatedly shown if end users give an incorrect answer 1 Go to tab Transitions 2 Turn on on the Self Transition toggle 3 Then click Create to finalize the state Objective Catch end users messages when greeting the bot Create greetings keywords to build understanding in chatbots when end users greet the bot We will use the NLUs feature to create the keywords 1 Go to the menu NLUs which is placed under the Conversation Flows menu Your screen will be switched to create NLUs 2 Click Create NLU 3 Then fill in the fields as follow NLU Name greetings NLU Type Keyword 4 Next click Add Keyword to define any words to trigger the bot Fill in the main keyword as follow Main keyword greetings 5 Add a new word by pressing enter on your keyboard Every time you write a new word press enter on your keyboard to save words Add these words 6 Click Create to save the NLUs Create greetingsIntent intent to catch user s input 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows The choice of Intent type is text which means it will catch incoming messages with text only We also set up the intent into As Initial which means the intent will be executed for the first time On classifier use greetings NLUs that we ve created in the previous step to connect the intent with creating keywords for greetings Objective Connect init and greetingsState states by creating a transition Create a transition to connect init and greetingsState states The transition will define in which condition the greetings state including the actions state will be executed 1 Pull a line from the init state and drag it to the greetingsState state If you succeed then it will show a Create Transition drawer 2 Fill in the transition condition as follow intent greetingsIntent 3 Click Create Transition Create Greetings State to Respond End User s who Greet Bot via Instagram Story Mention In this part we are going to create a greeting flow to respond to end users who mentioned the brand s Instagram account in the end users Instagram Stories End user will receive an automatic message in a direct message Learn more about Instagram Story Mention tutorials how to use instagram messaging automation in your project Objective Catch end users who mentioned the brand s in the end users Instagram Story Create igMentionedIntent intent to catch user s input 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows We set up the intent into As Initial which means the intent will be executed for the first time Choose intent type into data because we will use a payload named story_mention 4 Then click Create Objective Create greetings state to define how to respond Create igMentionedState as bot response to show keywords menu 1 Create another state by clicking the icon in the bottom right to create a new state named _igMentionedState_ 2 Click Add action then click in the action box to create a new action 3 When all actions available are shown then choose Text 4 Input action name igMentionedText 5 Next click the Add Variant button to fill in with this text Halo terima kasih telah menyapa Bank ABC di Instagram Story Anda n nUntuk memulai pilih menu yang tersedia n nKetik 1 untuk melihat FAQ nKetik 2 untuk melihat promo yang tersedia nKetik 3 untuk melihat lokasi Bank ABC nKetik 4 untuk berbicara dengan CS Bank ABC n n Cukup ketik angka pilihannya ya 6 Click Create Action Set the state into self transition The self transition will make the actions under state will be repeatedly shown if end users give an incorrect answer 1 Go to tab Transitions 2 Turn on on the Self Transition toggle 3 Then click Create to finalize the state Objective Connect init and igMentionedState states by creating a transition Create a transition to connect init and igMentionedState states The transition will define in which condition the greetings state including the actions state will be executed 1 Pull a line from the init state and drag it to the greetings state If you succeed then it will show a Create Transition drawer 2 Fill in the transition as follow 3 Click Create Transition Create Greetings State to Respond End User s who Greet Bot via Instagram Story Reply In this part we are going to create a greeting flow to respond to end users who reply to the brand s Instagram Story Learn more about Instagram Story Reply tutorials how to use instagram messaging automation in your project Objective Catch end users who reply to the brand s Instagram Story Create replyStoryIntent intent to catch user s input 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows We set up the intent into As Initial which means the intent will be executed for the first time Choose intent type into data because we will use a payload named story_reply 5 Then click Create Objective Create greetings state to define how to respond Create igStoryReplyState as bot response to show keywords menu 1 Create another state by clicking the icon in the bottom right to create a new state named igStoryReplyState 2 Click Add action then click in the action box to create a new action 3 When all actions available are shown then choose Text 4 Input action name igStoryReplyText 5 Next click the Add Variant button to fill in with this text Halo terima kasih telah menyapa Instagram Story Bank ABC n nUntuk memulai pilih menu yang tersedia n nKetik 1 untuk melihat FAQ nKetik 2 untuk melihat promo yang tersedia nKetik 3 untuk melihat lokasi Bank ABC nKetik 4 untuk berbicara dengan CS Bank ABC n n Cukup ketik angka pilihannya ya 6 Click Create Action Set the state into self transition The self transition will make the actions under state will be repeatedly shown if end users give an incorrect answer 1 Go to tab Transitions 2 Turn on on the Self Transition toggle 3 Then click Create to finalize the state Objective Connect init and igStoryReplyState states by creating a transition Create a transition to connect init and igStoryReplyState states The transition will define in which condition the greetings state including the actions state will be executed 1 Pull a line from the init state and drag it to the igStoryReplyState state If you succeed then it will show a Create Transition drawer 2 Fill in the transition as follow 3 Click Create Transition Create Quick Replies In this step we will create bot responses named quick reply Learn more about Quick Reply for Instagram Messaging tutorials how to use instagram messaging automation in your project Objective Show available FAQ topics to end user Create faqState state 1 Click icon in bottom right to create a new state 2 Fill in the state name with _faqState_ Create quick reply response type 1 Click in action box to create a new action 2 When all actions available are shown then choose Quick Reply 3 Input action name qrText 4 Fill in the Message field with Pilih topik yang kamu inginkan 5 Next click Add action button 6 Fill in the fields as follow 7 Click button Create Action Set the state into self transition The self transition will make the actions under state will be repeatedly shown if end users give an incorrect answer 1 Go to tab Transitions 2 Turn on on the Self Transition toggle 3 Then click Create to finalize the state Objective Connect all greetings states to FAQ state Connect greetings via direct message to FAQ state 1 Pull transition line which starts from greetingState to faqState 2 Fill in the Condition field content 1 3 Click Create Connect greetings via Instagram story mention to FAQ state 1 Pull transition line which starts from igMentionedState to faqState 2 Fill in the Condition field content 1 3 Click Create Connect greetings via Instagram story reply to FAQ state 1 Pull transition line which starts from igStoryReplyState to faqState 2 Fill in the Condition field content 1 3 Click Create Objective Show bot response after end user choose Daftar rekening baru Create rekeningBaruState state 1 Click icon in the bottom right to create a new state 2 Fill in the state name with rekeningBaruState Create bot response 1 Click in action box to create a new action 2 When all actions available are shown then choose Text 3 Input action name rekeningBaruText 4 Fill in Message field with Untuk mendaftar rekening baru kamu harus menyiapkan KTP KK asli dan foto diri 5 Click button Create Action Create bot action command to trigger next state to be executed In this section the bot will send the next command whenever this state is executed The next command will be caught later into an intent for executing another state to confirm end users whether they want to restart and show the menu or end the conversation 1 Click in action box to create a new action 2 When all actions available are shown then choose Command 3 Input action name nextCommand 4 Fill in Command field with next 6 Click button Create Action Objective Show bot response after end user choose Daftar kartu kredit Create kartuKreditState state 1 Click icon in the bottom right to create a new state 2 Fill in the state name with kartuKreditText Create bot response 3 Click in action box to create a new action 4 When all actions available are shown then choose Text 5 Input action name kartuKreditText 6 Fill in Message field with Untuk mendaftar kartu kredit baru kamu harus menyiapkan KTP KK asli dan foto diri 7 Click the button Create Action Create bot action command to trigger next state to be executed In this section the bot will send the next command whenever this state is executed The next command will be caught later into an intent for executing another state to confirm end users whether they want to restart and show the menu or end the conversation We already created this action in the previous step so we will choose from available actions 1 Click button Add action to add more action 2 In Action name dropdown search nextCommand actions 3 Click nextComman action 4 Then click Create Action button 5 Click Create to finalize the state Objective Connect FAQ menu response to quick reply options Create transition to connect from faqState to rekeningBaruState 1 Pull transition line which starts from faqState to rekeningBaruState 2 Fill in the Condition field content Daftar rekening baru 3 Click Save Create transition to connect from faqState to kartuKreditState 1 Pull transition line which starts from faqState to kartuKreditState 2 Fill in the Condition field content Daftar kartu kredit 5 Click Save Create Generic Template Carousel In this step we will create bot responses named generic template Learn more about Generic Template for Instagram Messaging tutorials how to use instagram messaging automation in your project Objective Show bot response of generic template carousel to end users Create carousel 1 Click icon in the bottom right to create a new state 2 Fill in the state name with carouselState Create bot response for the first carousel Buy 1 Get 1 1 Click in the action box to create a new action 2 When all actions available are shown then choose Carousel 3 Input action name carousel 4 Next click the Add Carousel button and fill in with the following fields Title Buy 1 Get 1 Text Gratis 1 pancake di Kafe ABC Thumbnail image URL 5 Click the Add action button The first action will trigger another state to execute Fill in with the following fields Label B1G1 Postback Payload Key carousel Value b1g1 6 Then click the Add action button again to create another action The second action will redirect to the open link Fill in with the following fields Label Lihat detail URL Create bot response for the second carousel Diskon 10 1 Next click the Add Carousel button and fill in with the following fields Title Diskon 10 Text Dapatkan di Mart ABC Thumbnail image URL 8 Click the Add action button The first action will trigger another state to execute Fill in with the following fields Label Diskon Postback Payload Key carousel Value diskon 9 Then click the Add action button again to create another action The second action will redirect to the open link Fill in with the following fields Label Lihat detail URL 10 Click Create Action 11 To finalize the state creation click Create in the state drawer Set the state into self transition The self transition will make the actions under state will be repeatedly shown if end users give an incorrect answer 1 Go to tab Transitions 2 Turn on on the Self Transition toggle 3 Then click Create to finalize the state Objective Connect all greetings states to carouselState Connect greetings via direct message to carousel state 1 Pull transition line which starts from greetingState to carouselState 2 Fill in the Condition field content 2 3 Click Create Connect greetings via Instagram story mention to carousel state 1 Pull transition line which start from igMentionedState to carouselState 2 Fill in the Condition field content 2 3 Click Create Connect greetings via Instagram story reply to carousel state 1 Pull transition line which start from igStoryReplyState to carouselState 2 Fill in the Condition field content 2 3 Click Create Objective Show bot response after end users choose Buy 1 Get 1 Create b1g1State state 1 Click icon in the bottom right to create a new state 2 Fill in the state name with b1g1State Create bot response 1 Click in the action box to create a new action 2 When all actions available are shown then choose Text 3 Input action name b1g1Text 4 Fill in Text Response field with Kamu telah memilih promo Buy 1 Get 1 dari Bank ABC Silahkan mengunjungi Kafe ABC terdekat Anda dan tunjukkan pesan ini 5 Click button Create Action Create bot action command to trigger next state to be executed In this section the bot will send the next command whenever this state is executed The next command will be caught later into an intent for executing another state to confirm end users whether they want to restart and show the menu or end the conversation We already created this action in the previous step so we will choose from available actions 1 Click button Add action to add more action 2 In the Action name dropdown search nextCommand actions 3 Click nextCommand action 4 Then click Create Action button Objective Show bot response after end users choose Disc 10 Create discState state 1 Click icon in the bottom right to create a new state 2 Fill in the state name with discState Create bot response 1 Click in action box to create a new action 2 When all actions available are shown then choose Text 3 Input action name discText 4 Fill in Text Response field with Kamu telah memilih promo Diskon 10 di Mart ABC dari Bank ABC Silahkan mengunjungi Mart ABC terdekat Anda dan tunjukkan pesan ini 6 Click button Create Action Create bot action command to trigger next state to be executed In this section the bot will send the next command whenever this state is executed The next command will be caught later into an intent for executing another state to confirm end users whether they want to restart and show the menu or end the conversation We already created this action in the previous step so we will choose from available actions 1 Click button Add action to add more action 2 In the Action name dropdown search nextCommand actions 3 Click nextCommand action 4 Then click Create Action button Objective Connect carousel menu response to postback options Create transition to connect from carouselState to b1g1State 1 Pull transition line which starts from carouselState to b1g1State 2 Fill in the Condition field content B1G1 intent carouselIntent amp amp payload carousel b1g1 3 Click Save Create transition to connect from faqState to kartuKreditState 1 Pull transition line which starts from carouselState to discState 2 Fill in the Condition field content Diskon intent carouselIntent amp amp payload carousel diskon 3 Click Save Create Text Response Objective Show bot response in the text to end users Create text 1 Click icon in the bottom right to create a new state 2 Fill in the state name with locationState 3 Click in the action box to create a new action 4 When all actions available are shown then choose Text 5 Input action name locationText 6 Next click the Add Variant button and fill in with following fields Lokasi bank ABC terdapat di Jalan Haji Nawi Jakarta Selatan Lihat peta 8 Click Create Action Create bot action command to trigger next state to be executed In this section the bot will send the next command whenever this state is executed The next command will be catched later into an intent for executing another state to confirm end users whether they want to restart and show menu or end the conversation 1 Click in action box to create a new action 2 When all actions available are shown then choose Command 3 Input action name nextCommand 4 Fill in Command field with next 5 Click button Create Action 6 Then click Create to finalize the state Objective Connect all greetings states to locationState Connect greetings via direct message to location state 1 Pull transition line which start from greetingState to locationState 2 Fill in the Condition field content 3 3 Click Save Connect greetings via Instagram story mention to carousel state 1 Pull transition line which start from igMentionedState to locationState 2 Fill in the Condition field content 3 3 Click Save Connect greetings via Instagram story reply to carousel state 1 Pull transition line which start from igStoryReplyState to locationState 2 Fill in the Condition field content 3 3 Click Save Create Handover to Human Agent Flow Handover to human agent path is required to be implemented in Instagram Messaging and we will use Handover API template Objective Create a flow that end user can request handover to human agents by using Handover API Create handover state 1 Click icon in bottom right to create new state 2 Fill in the state name with handover and activate toggle End state Create bot response to inform end user that the handover request has been received and waiting for agents to reply 1 Click in action box to create new action 2 When all actions available are shown then choose Text 3 Input action name waitForAgent 4 Next click the Add Variant button to fill in with this text Mohon menunggu ya Sedang kami hubungkan ke CS Bank ABC yang tersedia 5 Click Create Action Use Handover API to send handover request to Omnichat 1 Create another action by clicking Add action 2 Click in action box to create new action 3 Fill in action name with handover 4 When all actions available are shown then choose API 5 Choose Handover API 6 Click Create Action button 7 To finalize this step when creating a new state click the Create button in the state drawer Objective Connect all greetings states to handoverState Connect greetings via direct message to handover state 1 Pull transition line which start from greetingState to handoverState 2 Fill in the Condition field content 4 3 Click Save Connect greetings via Instagram story mention to handover state 1 Pull transition line which start from igMentionedState to handoverState 2 Fill in the Condition field content 4 3 Click Save Connect greetings via Instagram story reply to handover state 1 Pull transition line which start from igStoryReplyState to handoverState 2 Fill in the Condition field content 4 3 Click Save Create Confirmation State Objective Create a state that end user will be asked to restart for showing all menu or end conversation Create confirmState 1 Click icon in bottom left to create new state 2 Fill in the state name with confirmState 3 Click Add action then click to create new action 4 Choose Text then fill in the action name with confirmText 5 Next click the Add Variant button and input the following text Apakah ada yang ingin kamu tanyakan kembali Pilih menu yang tersedia n n1 Ketik 1 untuk melihat menu n2 Ketik 2 untuk menyelesaikan pembicaraan Set the state into self transition The self transition will make the actions under state will be repeatedly shown if end users give an incorrect answer 1 Go to tab Transitions 2 Turn on on the Self Transition toggle 3 Then click Create to finalize the state Objective Create an intent to catch command for executing next state 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows The choice of Intent type is command which means it will catch command only On condition it fills in with content with next which is a command that is sent from bot after executed responses such as quick replies carousel and text 4 Click Create to finalize Objective Connect all bot responses states to confirmState Connect quick replies responses states to confirmation state 1 Pull transition line which starts from rekeningBaruState to confirmState 2 Fill in the Condition field intent nextIntent 3 Click Save 4 Next pull transition line which starts from kartuKreditState to confirmState 5 Fill in the Condition field intent nextIntent 6 Click Save Connect carousel responses to confirmation state 1 Pull transition line which starts from b1g1State to confirmState 2 Fill in the Condition field intent nextIntent 3 Click Save 4 Next pull transition line which start from discState to confirmState 5 Fill in the Condition field intent nextIntent 6 Click Save Connect locationState to confirmState 1 Pull transition line which start from locationState to confirmState 2 Fill in the Condition field intent nextIntent 3 Click Save Objective Create state to restart menu Create a backToMenu state to restart menu 1 Click icon in bottom left to create a new state 2 Fill in the state name with backToMenu 3 Turn on toggle End State 4 Click Add action then click to create a new action 5 Choose Command then fill in the action name with backToMenu 6 Next fill in the Command with toMenu 7 Click Create to finalize Create toMenuIntent intent 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows This intent will trigger show main menu as bot response 4 Then click Create Update transition condition from init to greetingsState In this step we will update transition condition and use toMenuIntent as one of the conditions It is because this intent if executed will trigger a greeting response and showing the menu in bot 1 Click transition between init and greetingState 2 Edit drawer will be shown 3 Update condition field into this intent greetingsIntent intent toMenuIntent 4 Click Save to update Objective Create state to end conversation Create a bye state to end conversation and show thank you response 1 Click icon in bottom left to create a new state 2 Fill in the state name with bye 3 Turn on toggle End State 4 Click Add action then click to create a new action 5 Choose Text then fill in the action name with bye 6 Click Add Variant button 7 Next fill in the Text with Terima kasih sudah menghubungi Bank ABC 8 Click Create to finalize Objective Connect transition between confirmState to backToMenu and bye state 1 Pull transition line which starts from confirmState to backToMenu 2 Fill in the Condition field content 1 4 Click Save 5 Next pull transition line which start from confirmState to bye 6 Fill in the Condition field content 2 7 Click Save Create Fallback Intent 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows We set up the intent into As Fallback which means the intent will be executed as fallback It becomes a new layer of fallback in Handover flow before literally fallback ed to fallback flow 4 Click Create to finalize Finalize Your New Bot Objective Publish your bot to save the chatbot flow 1 Click on the Publish button which is placed on top right corner 2 Fill in the changelog You can input Initial version in the changelog 3 Click Publish to save the changelog Lastly your final chatbot flow will be like this Objective Testing your bot in emulator 1 On the bottom of your right screen there is a small button named Test Chatbot Click the button to start 2 You can try to test your bot by inputting a message in the text bot Say hi to your bot If it succeeds your bot will reply as follows 3 If you want to restart the session click refresh icon which is placed at the bottom Objective Deploy your bot Create new deployment 1 Go to the Deploy menu in the left sidebar 2 On this page click on the New Deployment button which is placed in the top right corner If you successfully clicked it will show a create deployment drawer 3 Choose any deployment version you want to deploy and fill in the changelog Or you can simply follow this screenshot 4 Click Submit to finish the deployment Create a new environment as prerequisites to deploy the bot to channel 1 Go to the Environment menu which is placed under the current menu Overview If you successfully entered the Environment menu you will see a page like this These 3 environments represent that your chatbot will be tested in development or staging first before go live as in Production stage 2 Click the Create Environment button in the Development environment and you will see a drawer to create a new environment 3 Choose the development version you want to in this tutorial we will use the 1 0 0 version 4 Fill in the environment URL This environment URL will be useful if you use our CMS feature learn more about CMS 5 Click Create to finalize 6 You will notice the button is changed into the Create Channel button In this step you will need an Omnichat account and an Omnichat inbox to deploy the bot Let s get started Create Inbox in Omnichat Follow these tutorials in Omnichat to continue 1 Register a new Omnichat account in Omnichat Learn more about how to register account in Omnichat kata omnichat getting started register your account first 2 Create a new channel inbox Learn more about create inbox in Omnichat kata omnichat getting started connect your instagram messaging inbox 1 For IGDM chatbot Section How to Set Up gt Connect to Instagram Messaging 2 For WA chatbot Section How to Set Up gt Connect to Whatsapp Messaging Create Agent Bot in Omnichat Follow the tutorial in Omnichat to continue Continue to create agent bot kata omnichat configure your agent chatbot setup agent bot in kata omnichat Connect Bot to Omnichat 1 If you succeed to follow the above tutorials you will see an access token generated in Omnichat that needs to be pasted into the Platform The screenshot below 2 Next open the Kata Platform URL and do login 3 Click your project that already had a chatbot and deployed 4 Then go to the menu Deploy gt Environment You will see this screen 5 Click Create Channel button in channel table list and drawer to set up the channel will be shown 6 Choose Omnichat in Channel Type 7 In the Access Token field paste your access token that was generated from the Omnichat inbox 8 Click Save to deploy your bot 9 Few steps to the final A created channel will generate a webhook URL Copy the webhook URL in the Platform to Omnichat Finalize Agent Bot in Omnichat 1 Go back to Omnichat and do login 2 Go to menu Settings gt Integrations gt Agent Bot You will see this screen and information that you re still in the first step to finalize 3 Click Edit button in the agent bot configuration 4 A drawer will appear to fill in the Platform webhook URL Paste your chatbot webhook URL 5 Click Update and you will be redirected to agent bot list 6 Lastly turn on the toggle in Activate Agent Bot Your chatbot is already connected to the Omnichat inbox and ready to use Update Instagram Bot to Use Ice Breaker Ice Breaker is useful for first time users can understand the available menu or topics in your Instagram bot To use Ice Breaker we need to create an Instagram inbox as a prerequisite Learn more about Ice Breaker channels instagram messaging sending ice breaker reply Also you need to successfully finish the Instagram bot until connect to agent bot Omnichat Go back to the first step Before we jump to the tutorial here is the general conversation flow for using Ice Breaker Scenario Flow Details Each row represents 1 bubble message Component Details First time end users chat the brand s Instagram DM then it will show Ice Breaker Learn more about Ice Breaker It will not show when using Instagram Story Mention or Instagram Story Reply Show ice breaker FAQ Promo Lokasi Berbicara dengan CS Objective Create Ice Breaker in your Instagram inbox Follow the tutorial on how to set up Ice Breaker in Instagram Inbox tutorials how to use instagram messaging automation in your project Objective Create intent to trigger bot response if end users click all Ice Breaker Create intent for FAQ menu 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows This intent will trigger the FAQ state to show FAQ response when end user click FAQ in Ice Breaker feature 4 Then click Create Create intent for Promo menu 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows This intent will trigger the promo state to show promo response when end user click Promo in Ice Breaker feature 4 Then click Create Create intent for Lokasi menu 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows This intent will trigger the location state to show location response when end user click Lokasi in Ice Breaker feature 4 Then click Create Create intent for Berbicara dengan CS menu 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows This intent will trigger the handover state to handover end user to human agent when end user click Berbicara dengan CS in Ice Breaker feature 4 Then click Create Objective Create transition for mapping bot responses after end users clicked the Ice Breaker Connect init to faqState to trigger FAQ response after end users clicked FAQ in Ice Breaker 1 Pull transition line from init to faqState 2 Create transition drawer will show 3 Fill in condition as follow intent faqIceBreaker 4 Click Create Connect init to carouselState to trigger generic template carousel response after end users clicked Promo in Ice Breaker 1 Pull transition line from init to carouselState 2 Create transition drawer will show 3 Fill in condition as follow intent promoIceBreaker 4 Click Create Connect init to carouselState to trigger text response after end users clicked Lokasi in Ice Breaker 1 Pull transition line from init to locationState 2 Create transition drawer will show 3 Fill in condition as follow intent locationIceBreaker 4 Click Create Connect init to handoverState to trigger handover to human agents after end users clicked Berbicara dengan CS in Ice Breaker 1 Pull transition line from init to handoverState 2 Create transition drawer will show 3 Fill in condition as follow intent csIceBreaker 4 Click Create Objective Publish updated bot and deploy to Omnichat again Follow the tutorial to finalize your bot tutorial create igdm bot handover from chatbot to agent finalize your new bot",
      "excerpt": "Kata Platform is a platform to create chatbots and train them with Natural Language Processing NLP You can create any chatbots for any use cases such as FAQ campaign customer service",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.454Z",
        "lastModified": "2022-06-07T01:36:57.454Z",
        "size": 48436,
        "formattedSize": "47.3 KB",
        "absolutePath": "/tutorials/create-igdm-bot-handover-from-chatbot-to-agent"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "create-igdm-bot-handover-from-chatbot-to-agent",
      "title": "Create Instagram Bot Handover from Chatbot to Agent Tutorial",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-ig-handover.webp",
      "prev": "integration-chatbot-with-cms-studio",
      "next": "create-simple-bot-handover-from-chatbot-to-agent",
      "date": "2018-10-10T07:00:00+07:00"
    },
    {
      "contents": "Kata Platform platform kata ai www platform kata ai is a platform to create chatbots and train them with Natural Language Processing NLP You can create any chatbots for any use cases such as FAQ campaign customer service handover to human agents and more In this tutorial we will create a chatbot that is able to handoff conversations to human agents also known as Agent Handover We will use the Kata Omnichat dashboard to connect chatbots with human agents Check this documentation kata omnichat for Kata Omnichat explanation Simple Chatbot Flow Before we jump into the tutorial let s see the scenario for the conversation We will create a chatbot using _keywords_ which when customers enter 1 to end the conversation or 2 to do the handover Conversation Flow Table Scenario Flow Details Each row represents 1 bubble message Greetings Halo selamat datang di layanan CS Bank ABC Apakah ingin dihubungkan ke CS Bank ABC yang sedang available Ya lanjut Tidak end session Cukup ketik angka pilihannya ya End conversation if customer typing 2 Terima kasih sudah menghubungi Bank ABC Customer typing 1 and chatbot request handover to agent Mohon menunggu ya Sedang kami hubungkan ke CS Bank ABC yang tersedia End session after handover done Terima kasih sudah menghubungi Bank ABC Create Project Objective Register your new account and login to the Platform 1 Go to and click Sign Up to create new account 2 Input required fields in sign up page Username email address role and captcha 3 Go to your registered email s inbox You will receive an email to verify your account and input your password 4 When you click the Confirm Email button in the verification email you will be redirected to setup password Insert your password and confirm the password 5 You will be redirected to the Login Page Input your username and password to continue Objective Create new chatbot project Login to Kata Platform and create project 1 Open your browser then open the URL and enter your username amp password 2 Click Login to continue 3 Click on Create Project and fill in the form Each project contains one bot design one NL and one CMS Create Greetings Flow Objective Define a flow Create a flow name Handover We will use 1 flow for this simple bot 1 Click Create Flow button in current screen 2 Create flow Handover other fields are left blank Then click Create Objective Create greetings state to define how to respond Create init state 1 Click icon in bottom right to create new state 2 Create state init and click toggle to turn on Initial State and other fields are left blank Then click Create Create greetings as bot response to show keywords menu 1 Create another state by clicking the icon in the bottom right to create a new state named greetings 2 Click Add action then click in the action box to create a new action 3 When all actions available are shown then choose Text 4 Input action name greetings 5 Next click the Add Variant button to fill in with this text Halo selamat datang di layanan CS Bank ABC n n Apakah ingin dihubungkan ke CS Bank ABC yang sedang available n n1 Ya n2 Tidak n n Cukup ketik angka pilihannya ya 6 Click Create Action 7 To finalize the state creation click Create in state drawer Objective Catch end user s message when greet the bot Create greetings keywords to build understanding in chatbots when end user s greet the bot We will use the NLUs feature to create the keywords 1 Go to the menu NLUs which is placed under the Conversation Flows menu Your screen will be switched to create NLUs 2 Click Create NLU 3 Then fill in the fields as follow NLU Name greetings NLU Type Keyword 4 Next click Add Keyword to define any words to trigger the bot Fill in the main keyword as follow Main keyword hi 5 Add a new word by pressing enter on your keyboard Every time you write a new word press enter on your keyboard to save the word Add these words 6 Click Create to save the NLUs Create greetings intent to catch user s input 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows The choice of Intent type is text which means it will catch incoming messages with text only On classifier use greetings NLUs that we ve created in previous step to connect the intent with create keywords for greetings 4 Then click Create Objective Connect init and greetings states by creating a transition Create a transition to connect _init_ and _greetings_ states The transition will define in which condition the greetings state including the actions state will be executed 1 Pull a line from the init state and drag it to the greetings state If you succeed then it will show a Create Transition drawer 2 Fill in the transition as follow 3 Click Create Transition Catch End user s Typing when Choosing Menu Objective Catch end user s message when choosing menu by typing 1 or 2 Create menu keywords 1 Go to the menu NLUs which is placed under the Conversation Flows menu Your screen will be switched to create NLUs 2 Click Create NLU 3 Then fill in the fields as follow NLU Name menu NLU Type Keyword 4 Next click Add Keyword to define any words to trigger the bot Fill in the main keyword as follow Main keyword satu 5 Add a new word by pressing enter on your keyboard Every time you write a new word press enter on your keyboard to save the word Add these words satu and dua as the main keywords mean they define what your end users will be inputted when choose menu 6 Click Create to save the NLUs Create an intent menu to catch the end user s input 1 Click the Intent tab which is placed next to the Conversation Flows sidebar 2 Click Create Intent button 3 Fill in the intent as follows This intent will catch the end user s input after typing 1 or 2 Adding a classifier with menu to define this intent will be executed whenever a sentence has the menu keyword Add attributes and choose NLU menu because we have 2 main keywords that need to be understood by the intent to execute the handover path or end conversation path 4 Then click Create Create Handover to Human Agent Flow Objective Create a flow that end user can request handover to human agents by using Handover API Create handover state 1 Click icon in bottom right to create new state 2 Fill in the state name with handover and activate toggle End state Create bot response to inform end user that the handover request has been received and waiting for agents to reply 1 Click in action box to create new action 2 When all actions available are shown then choose Text 3 Input action name waitForAgent 4 Next click the Add Variant button to fill in with this text Mohon menunggu ya Sedang kami hubungkan ke CS Bank ABC yang tersedia 5 Click Create Action Use Handover API to send handover request to Omnichat 1 Create another action by clicking Add action 2 Click in action box to create new action 3 Fill in action name with handover 4 When all actions available are shown then choose API 5 Choose Handover API 6 Click Create Action button 7 To finalize this step when creating a new state click the Create button in the state drawer Create a transition to connect greetings and handover states 1 Pull a line from the greetings state and drag it to the handover state If you succeed then it will show a Create Transitio n drawer 2 Fill in the transition as follows This condition means if the end user s keyword is identified as menu _and_ they are typing 1 then it will show the handover state including the actions state 3 Click Create Create End Conversation Flow Objective Create a flow that end user doesn t want to handover to agent and end the conversation Create end state to cancel handover agent and finish the conversation 1 Click icon in bottom left to create new state 2 Fill in the state name with end and click toggle End state to set the state as the end of the flow 3 Click Add action then click to create new action 4 Choose Text then fill in the action name with end 5 Next click the Add Variant button and input the following text Terima kasih sudah menghubungi Bank ABC 6 Click Create to finalize Create a transition to connect greetings and end states 1 Pull a line from the greetings state and drag it to the end state If you succeed then it will show a Create Transition drawer 2 Fill in the transition as follows This condition means if the end user s keyword is identified as menu _and_ they are typing 2 then it will execute the end state 3 Click Create Finalize Your New Bot Objective Publish your bot to save the chatbot flow 1 Click on the Publish button which is placed on top right corner 2 Fill in the change log You can input Initial version in the change log 3 Click Publish to save the change log Lastly your final chatbot flow will be like this Objective Testing your bot in emulator 1 On the bottom of your right screen there is a small button named Test NLU Click the button to start 2 You can try to test your bot by inputting a message in the text bot Say hi to your bot If it succeeds your bot will reply as follows 3 If you want to restart the session click refresh icon which is placed at the bottom Objective Deploy your bot Create new deployment 1 Go to the Deploy menu in the left sidebar 2 In this page click on the New Deployment button which is placed in the top right corner If you successfully clicked it will show a create deployment drawer 3 Choose any deployment version you want to deploy and fill in the change log Or you can simply follow this screenshot 4 Click Submit to finish the deployment Create new environment as prerequisites to deploy the bot to channel 1 Go to the Environment menu which is placed under the current menu Overview If you successfully entered the Environment menu you will see a page like this These 3 environments represent that your chatbot will be tested in development or staging first before go live as in Production stage 2 Click the Create Environment button in the Development environment and you will see a drawer to create new environment 3 Choose the development version you want to in this tutorial we will use the 1 0 0 version 4 Fill in the environment URL This environment URL will be useful if you use our CMS feature learn more about CMS 5 Click Create to finalize 6 You will notice the button is changed into the Create Channel button In this step you will need an Omnichat account and Omnichat inbox to deploy the bot Let s get started Create Inbox in Omnichat Follow these tutorials in Omnichat to continue 1 Register a new Omnichat account in Omnichat Section How to Set Up kata omnichat getting started register your account first 2 Create a new channel inbox For IGDM chatbot Section How to Set Up gt Connect to Instagram Messaging kata omnichat getting started connect your instagram messaging inbox For WA chatbot Section How to Set Up gt Connect to Whatsapp Messaging kata omnichat getting started connect your waba inbox Create Agent Bot in Omnichat Follow the tutorial below in Omnichat to continue Section How to Set Up Agent Bot Connect Bot to Omnichat 1 If you succeed to follow the above tutorials you will see an access token generated in Omnichat that needs to be pasted into the Platform The screenshot below 2 Next open the Kata Platform URL and do login 3 Click your project that already had a chatbot and deployed 4 Then go to the menu Deploy gt Environment You will see this screen 5 Click Create Channel button to start connect and you will see an empty channel table 6 Click Create Channel button in channel table list and drawer to set up the channel will be shown 7 Choose Omnichat in Channel Type 8 In the Access Token field paste your access token that was generated from the Omnichat inbox 9 Click Save to deploy your bot 10 Few steps to the final A created channel will generate a webhook URL Copy the webhook URL in the Platform to Omnichat Finalize Agent Bot in Omnichat 1 Go back to Omnichat and do login 2 Go to menu Settings gt Integrations gt Agent Bot You will see this screen and information that you re still in first step to finalize 3 Click Edit button in the agent bot configuration 4 A drawer will appear to fill in the Platform webhook URL Paste your chatbot webhook URL 5 Click Update and you will be redirected to agent bot list 6 Lastly turn on the toggle in Activate Agent Bot Your chatbot is already connected to the Omnichat inbox and ready to use Final Demo We provide video tutorials and interaction demos for agent bot Omnichat features Check these out Create simple bot handover video tutorial Chatbot interaction with end user and handover to human agent",
      "excerpt": "Kata Platform platform kata ai www platform kata ai is a platform to create chatbots and train them with Natural Language Processing NLP You can create any chatbots for any use",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.454Z",
        "lastModified": "2022-06-07T01:36:57.454Z",
        "size": 20368,
        "formattedSize": "19.9 KB",
        "absolutePath": "/tutorials/create-simple-bot-handover-from-chatbot-to-agent"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "create-simple-bot-handover-from-chatbot-to-agent",
      "title": "Create Simple Bot Handover from Chatbot to Agent Tutorial",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-simple-handover.webp",
      "prev": "create-igdm-bot-handover-from-chatbot-to-agent",
      "date": "2018-11-11T07:00:00+07:00"
    },
    {
      "contents": "Create a Project First login sign up to And click on Create Project and fill in the form Each project contains one bot design one NL and one CMS You will be directed to this page Noted You can try bot in Menu Test Chatbot in the bottom right corner Create a Hello Flow Create Flow You may find a flow that is created automatically by the system or default flow We will add a new flow called helloFlow Set flow to active and persistent It will be shown like this Create keyword NLU for helloFlow In this step we will define the NLU Natural Language Understanding to trigger order flow NLU is used to translate user inputs into data that machine can understand There are many types of NLU but the type that we will use in this particular flow is called keyword To define the NLU go to NLUs menu and create We will name it hello_NLU It will be shown like this Create Intent Go back to Conversation flow menu and choose intent Click on button in Conversation Flow menu Set the Intent name to helloIntent and choose option as initial Add a classifier and choose NLU that we create We are gonna match it with helloWorld keyword in NLU Create action for showing Hello World Create State Choose a states and click on button We will create a initial state Set name to init and choose Initial State and click create We will create another state for showing the response in our bot Choose action to text Add text response to Hello World Action should be shown like this Create Transation Now we will create a transition between two states that we have created before Click the green dot on init state and a connector line will appear Connect that line to hello state If you do it right a Create Transition form will appear Set the condition to intent helloIntent and click Create Testing Before this step don t forget to Publish your change And then try your bot in Test Chatbot menu Try to enter keyword that you define in NLU Viola You have succeed build your first bot",
      "excerpt": "Create a Project First login sign up to And click on Create Project and fill in the form Each project contains one bot design one NL and one CMS You will",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.455Z",
        "lastModified": "2022-06-07T01:36:57.455Z",
        "size": 4346,
        "formattedSize": "4.2 KB",
        "absolutePath": "/tutorials/hello-world"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "hello-world",
      "title": "Creating a Simple Hello World Chatbot",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-hello-world.webp",
      "next": "bot-studio-tutorial",
      "date": "2018-06-06T07:00:00+07:00"
    },
    {
      "contents": "LINE is a free messaging platform and is famous in Indonesia This messaging platform supports various interactive action types such as carousel button Image Map and many more This tutorial will learn how to deploy your chatbot to LINE Let s start Create a deployment Deployment is a step to merge all Revisions in Flow NLU and CMS so that you can integrate bots into the channel Before starting channel integration chatbots must at least have 1 deployment 1 In the sidebar choose the Deploy menu Then select Overview 2 Click the New Deployment button Then it will show a form on the right screen 3 Choose the deployment version In the Kata Platform there are 3 deployment versions which are Major to deploy significant changes such as change chatbot use case Minor to deploy medium changes such as adding new features in your chatbot Patch to deploy small changes such as change copy in action 4 Then click the Submit button If deployment is successful then the interface will be shown like this The step after creating a deployment is to create an environment An environment is a zone in computer science that provides a place to run integrated applications For example Kata Platform has 3 environments development staging and production 1 Choose the menu Deploy then choose Environment 2 In this step you will create a Development environment Click the button Create Environment in the Development card 3 Fill in the environment then click Create Integration to a channel This step will create a chatbot integration with the Telegram messaging platform Telegram is a free messaging platform to deploy chatbots with a simple setup 1 In the Deploy gt Environment click the Create Channel button 2 You will redirect to the Create Channel page Click the Create Channel button to create a new channel 3 Fill in the channel name and choose type as LINE 4 To fill in the Bot User OAuth Access Token field we must set up a chatbot in Telegram first The next step is to open your Telegram application and log in Before you start you need a LINE account already registered and logged in to your application Registration to LINE Developer console and setup 1 Create a LINE account To sign up for a LINE developer account you have to have a LINE account by installing a LINE application either desktop or mobile app 2 After you successfully registered sign in to 3 In the LINE Developer Console click Log In 4 Next click on Login with LINE 5 Enter your email and password After you successfully log in you will be redirected to the provider list dashboard 6 Next click Create New Provider Fill in the provider name 7 Click Confirm to continue 8 Your new provider has been created 9 Next set up the channel in the Messaging API by clicking Create Channel on Messaging API 10 Fill in your LINE bot detail 11 Next you have to choose the Developer Trial as Plan 12 Finally click Create The successfully created channel will look like this Integrate LINE to your chatbot 1 Click on the created channel to fill in the Channel Access Token 2 Click Issue in the Messaging Settings section 3 Then a dialog will show Click on Issue to continue 4 Finally copy the Channel Access Token below and paste it on the Create Channel form in the Kata Platform 5 Go back to Kata Platform then paste the Channel Access Token 6 Next you will fill in the Channel Secret field Then in Basic Information copy Channel Secret from LINE to the Kata Platform 7 Go back to the Kata Platform then paste the Channel Secret 8 Click Create to generate a webhook URL from the Kata Platform After the webhook URL is generated go to Messaging Settings in the LINE developer console to enable webhook 9 Enable the webhook by clicking on Enable in the Use Webhooks section placed above the Webhook URL field 10 Click Update then paste the webhook URL to the LINE developer console 11 Click Update then click Verify 12 Next disable auto reply messages and greeting messages by following figure 21 13 Congratulations you have successfully deployed your bot to LINE Messenger 14 Next test your bot by scanning the QR code It is the end of the guidance If you find it difficult to follow you can contact support kata ai mailto support kata ai Thank you",
      "excerpt": "LINE is a free messaging platform and is famous in Indonesia This messaging platform supports various interactive action types such as carousel button Image Map and many more This tutorial will",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.455Z",
        "lastModified": "2022-06-07T01:36:57.455Z",
        "size": 10674,
        "formattedSize": "10.4 KB",
        "absolutePath": "/tutorials/how-to-deploy-your-chatbot-to-line"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-deploy-your-chatbot-to-line",
      "title": "How to deploy your chatbot to LINE",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-line.webp",
      "date": "2022-01-17T07:00:00+07:00"
    },
    {
      "contents": "Twitter is a trending social media for most countries so Twitter chatbots will be a great opportunity to join the trend In this tutorial you will learn how to deploy the bot to the Twitter direct message channel So let s get started Deploy your chatbot 1 Click Deploy menu in the left sidebar 2 On the Deploy page click on the New Deployment button in the top right corner It will open up the Create Deployment menu 3 Choose any deployment version you want to deploy and fill in the changelog 1 Click Submit to finish the deployment If you already have an environment created skip these steps 1 Go to the Deployments gt Environment menu 2 Click the Create Environment button in any environment You will see a drawer to create a new environment 3 Choose the development version you want in this tutorial we use the 1 0 0 version 4 Fill in the environment URL This environment URL is used for CMS Learn more about CMS 5 Click Create to create the environment 6 Created environment now has a Create Channel button Continue to choose Twitter as a chatbot channel 1 Click the Create Channel button to start adding channels to the environment It will open up the Channel menu within the environment 2 Click the Create Channel button in the channel table list A menu to set up the channel will be shown 3 Choose Twitter in Channel Type Field Name Functionality Limitation Name Your channel name Max 30 characters must contain only alphanumeric characters A Z a z 0 9 and _ Access Token Access Token Secret Consumer Key API Key Consumer Secret API Secret How to collect API secret key access token and access token secret 1 To deploy your bot on Twitter you need to register for a developer account Go to 2 Continue to sign up by following the instructions 3 Then log in to the Twitter Developer Page You will see the homepage 4 Click on Create An App tab then your page will be shown like this 5 Fill the form then click on Create button 6 Then go to the Keys and tokens tab Click the Regenerate button to generate an API key API secret key access token and access token secret Here is an example 7 Then go to the Permissions tab In this tab change access permissions to Read write and Direct Message 8 Go to the Dev environments then click the button Set up dev environment to begin Next step is to paste the API key API secret key access token and access token secret from Twitter to the Kata Platform 1 Go back to the Key and Tokens tab copy all fields 2 After copied go back to Kata Platform 3 Paste the API key API secret key access token and access token secret there Here is the example 4 Click Create to generate the webhook You can see a webhook URL from the generated channel 5 Click the copy icon to copy the webhook URL Finalize Twitter Direct Message Set Up 1 Clone this repository 2 Install Node js dependencies using npm install command 3 Create a new config json file based on config sample json amp env file based on env template and fill in your Twitter keys tokens and webhook environment name Twitter keys and access tokens are found on your app page on Apps Dashboard The basic auth properties can be anything you want and are used for simple password protection to access the configuration UI Environment name is found on the Dev Environment page Make sure you have access to the Account Activity API 4 Revisit your developer twitter com Apps Settings page and add the following URL values as whitelisted Callback URLs 5 Run locally using npm start command 6 Open If it succeeds username and password are inserted with basic auth properties that you have defined before 7 Paste webhook from Kata Platform to Create or Update Webhook Click Create Update to continue 8 Next open 9 Then click Add to add a user subscription Login with the same account that you set to become the bot 10 Finally create a direct message to the bot account This is the end of the guidance you can contact support kata ai if you have any difficulties when implementing this",
      "excerpt": "Twitter is a trending social media for most countries so Twitter chatbots will be a great opportunity to join the trend In this tutorial you will learn how to deploy the",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.455Z",
        "lastModified": "2022-06-07T01:36:57.455Z",
        "size": 10175,
        "formattedSize": "9.9 KB",
        "absolutePath": "/tutorials/how-to-deploy-your-chatbot-using-twitter"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-deploy-your-chatbot-using-twitter",
      "title": "How to deploy your chatbot using Twitter",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-twitter.webp",
      "date": "2021-08-26T07:00:00+07:00"
    },
    {
      "contents": "Facebook Messenger commonly known as Messenger is a messaging app and platform developed by Facebook In this section we will learn to connect our bot with Messenger Then you can use this simple bot tutorial kata platform documentation content start your first chatbot to integrate your bot with Messenger Deploy your chatbot 1 Click the Deploy menu in the left sidebar 2 On the Deploy page click on the New Deployment button in the top right corner It will open up the Create Deployment menu 3 Choose any deployment version you want to deploy and fill in the changelog 4 Click Submit to finish the deployment If you already have an environment created skip these steps 1 Go to the Deployments gt Environment menu 2 Click the Create Environment button in any environment You will see a drawer to create a new environment 3 Choose the development version you want in this tutorial we use the 1 0 0 version 4 Fill in the environment URL This environment URL is used for CMS Learn more about CMS 5 Click Create to create the environment 6 Created environment now has a Create Channel button Continue to choose FB Messenger as a chatbot channel 1 Click the Create Channel button to start adding channels to the environment It will open up the Channel menu within the environment 2 Click the Create Channel button in the channel table list It will show a menu to set up the channel 3 Choose FB Messenger in Channel Type Field Name Functionality Limitation Name Your channel name Max 30 characters must contain only alphanumeric characters A Z a z 0 9 and _ Page Access Token These are required fields from Facebook to ensure security with third party applications In addition you can find the Page Access Token and App Secret in Facebook Developer App Secret How to get Page Access Token 1 First you have to sign in register first if you don t have a Facebook account to 2 Then create a new app for your bot 3 Go to Messenger gt Settings You will see the Access Tokens field Settings menu src assets images tutorials how to use facebook messenger for your chatbot image5 webp alt How to use Facebook Messenger for your chatbot naturalHeight 670 naturalWidth 1364 gt 4 To get the access token you need to add a Facebook Page First click Create New Page to create a new page Then continue to create a page by following the instructions 5 Click Generate Token to generate your access token then copy it to your channel in the Platform The next step is to paste the access token from Facebook to the Kata Platform 1 Go back to Kata Platform 2 Paste the Page Access Token there Here is the example Let s continue to get App Secret How to get App Secret 1 Go to Settings Basic to find the App Secret 2 Click Show then copy the App Secret The next step is to paste the access token from Facebook to the Kata Platform 1 Go back to Kata Platform 2 Paste the App Secret there Here is the example 3 Click Create to generate the webhook You can see a webhook URL from the generated channel 4 Click the copy icon to copy the webhook URL Finalize Set up in Facebook Paste webhook URL to Facebook 1 Go to the Webhooks field in the Messenger Settings 2 Fill the Callback URL with a webhook URL from a channel you ve made in the Kata Platform Paste Challenge Token to Facebook 1 To get Challenge Token from your channel you need to click on the top of the column to trigger the View Channel drawer 2 Block content inside the Challenge Token field then copy it 3 Go back to the 4 Next paste the challenge token in Verify Token from the Kata Platform 5 Finally click Add Subscription and check the messages and messaging_postbacks checklist It is the end of the guidance You can contact support kata ai mailto support kata ai if you have any difficulties when implementing this",
      "excerpt": "Facebook Messenger commonly known as Messenger is a messaging app and platform developed by Facebook In this section we will learn to connect our bot with Messenger Then you can use",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.455Z",
        "lastModified": "2022-06-07T01:36:57.455Z",
        "size": 9302,
        "formattedSize": "9.1 KB",
        "absolutePath": "/tutorials/how-to-use-facebook-messenger-for-your-chatbot"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-use-facebook-messenger-for-your-chatbot",
      "title": "How to use Facebook Messenger for your chatbot",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-facebook-messenger.webp",
      "date": "2021-08-26T07:00:00+07:00"
    },
    {
      "contents": "Freshchat s live chat software is the fastest way for you to engage with your website visitors provide assistance and convert leads to happy customers In this section we will learn to connect our bot with Freshchat Let s get started Deploy your chatbot 1 Click Deploy menu in the left sidebar 2 On the Deploy page click on the New Deployment button in the top right corner It will open up the Create Deployment menu 3 Choose any deployment version you want to deploy and fill in the changelog 4 Click Submit to finish the deployment If you already have an environment created skip these steps 1 Go to the Deployments gt Environment menu 2 Click the Create Environment button in any environment You will see a drawer to create a new environment 3 Choose the development version you want in this tutorial we use the 1 0 0 version 4 Fill in the environment URL This environment URL is used for CMS Learn more about CMS 5 Click Create to create the environment 6 Created environment now has a Create Channel button Continue to choose Freshchat as a chatbot channel 1 Click the Create Channel button to start adding channels to the environment It will open up the Channel menu within the environment 2 Click the Create Channel button in the channel table list A menu to set up the channel will be shown 3 Choose Freshchat in Channel Type Field Name Functionality Limitation Name Your channel name Max 30 characters must contain only alphanumeric characters A Z a z 0 9 and _ API Token Token credential from Freshchat Actor ID Actor ID that collected from Freshchat How to generate API Token 1 First of all you need to sign in to your Freshworks account to do the integration 2 After you re logged in go to the Settings page to configure the API Token and Webhook 3 In order to generate the API Token in Freshchat go to Settings API Tokens 4 Then click on the Generate Token button Next step is to paste the API token from Freshchat to the Kata Platform 1 Go back to Kata Platform 2 Paste the API Token there Here is the example Let s continue to get an Actor ID How to generate Actor ID 1 Go to Settings Team Members 2 Then click on the Add a team member button In the Roles field choose Agent 3 With the API Token we got from the previous step get the Actor ID using Postman or cURL Actor ID is the agent id curl request GET header Authorization Bearer 4 Copy one of the Agent IDs then paste it to the Kata Platform Next step is to paste the API token from Freshchat to the Kata Platform 1 Go back to Kata Platform 2 Paste the Actor ID there Here is the example 3 Click Create to generate the webhook You can see a webhook URL from the generated channel 4 Click the copy icon to copy the webhook URL Finalize Freshchat set up 1 Go back to Freshchat then go to Settings Webhooks 2 Turn on the webhook toggle which is placed in the top right 3 Then paste the webhook URL in the Webhook field 4 Next fill in a valid email address in the Failure Notifications field It will enable you to receive the notification whenever there is a failure in the integration Here is the example 5 Finally click on the Save button It works You can now share your newly created chatbot with your friends Freshchat also has an agent handover feature It is useful for creating a seamless engagement experience for your customer to interact with your agent to meet their needs The agent handover flow is 1 End users start a conversation with a chatbot 2 In the beginning or middle of a conversation the end user may request to be connected with any human agents 3 Chatbot function will be paused if there s an available agent If there are none chatbot will notify the user to make another request after a few minutes This is the end of the guidance you can contact support kata ai if you have any difficulties when implementing this",
      "excerpt": "Freshchat s live chat software is the fastest way for you to engage with your website visitors provide assistance and convert leads to happy customers In this section we will learn",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.455Z",
        "lastModified": "2022-06-07T01:36:57.455Z",
        "size": 8527,
        "formattedSize": "8.3 KB",
        "absolutePath": "/tutorials/how-to-use-freshchat-for-your-chatbot"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-use-freshchat-for-your-chatbot",
      "title": "How to use Freshchat for your chatbot",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-freshchat.webp",
      "date": "2021-08-26T07:00:00+07:00"
    },
    {
      "contents": "Automate your Instagram DM conversation using our flow builder in the Kata Platform Create bots to reply to customers with text images quick replies generic template ice breaker and coming soon sticker Instagram Messaging Features Instagram Story Reply About You can send an automated reply to their DM whenever your customers engage you via Instagram Story How to use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt Intent gt Create Intent 3 Choose Data for the Intent Type dropdown 4 Click Add Condition and fill in payload type story_reply 5 Click Save Instagram Story Mention About Whenever your customers mention your account in their Instagram Story you can send automated replies to their DM Important note Because Instagram Story will be deleted every 24 hours it is expected that the story attachments will disappear too Chatbots cannot read the Instagram Story Mention content but human agents can see the attachment Tips If your customers mention your account in the complaint context and your chatbot cannot satisfy them with the solutions the agent can take over the conversation How to Use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt Intent gt Create Intent 3 Choose Data for the intent type dropdown 4 Click Add Condition and fill in payload type story_mention 5 Click Save Response Type Sending Texts Reply Primary chatbot responses that show text to end users How to Use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose Text FYI the Text limitation for Instagram automation is 1 000 characters and allows for emoji 4 Click Create Action to finalize your action Sending Images Reply Primary chatbot response to send an image to end users How to Use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose Text FYI the Text limitation for Instagram automation is 1 000 characters and allows for emoji 4 Click Create Action to finalize your action Sending Quick Replies Reply You can use this feature to show menu options to end users and a good user experience to present to end users your brand s bot features In Platform this feature is named Quick Reply which is placed in Flow gt Conversation Flow gt State gt Action List Here is the screenshot of quick replies How to Use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose Quick Reply The Quick Reply limitations are 1 Max 13 quick replies 2 Each quick reply only allowed 20 char before being truncated 4 Mapping for Quick Reply with an accurate view to end user can be seen as follows 5 Click Create Action to finalize your action Sending Generic Template Carousel Type This feature has an interactive way to show menus or options by adding images and buttons in one bubble Even more 1 bubble message can show multiple Generic Templates Here is the screenshot How to Use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose Carousel FYI for generic template limitations are 1 Maximum 10 elements 2 Maximum of 3 buttons per element 3 Each element consists of The title to display in the template which has 80 character limit the subtitle to display in the template has 80 character limit 4 Click Create Action to finalize your action Sending Ice Breaker Reply We probably felt confused the first time using a chatbot as end users especially if the bot hasn t given apparent bot features Ice Breaker solves this problem by showing a _getting started_ on a few topics after the end user adds the brand s account Important Ice Breaker is only shown for a first time chat Here is the screenshot of the feature How to Use Ice Breaker setup must be done in Omnichat kata omnichat introduction what is kata omnichat Hence we need to create an Inbox and connect it to Instagram DM Follow this tutorial on how to create an Inbox kata omnichat getting started connect your instagram messaging inbox Finally you ve successfully created the Inbox Let s jump to creating the Ice Breaker tutorial kata omnichat manage inbox settings set up ice breaker Instagram Sticker like heart This feature allows your bot to send a sticker heart and it is different from inline like Tips To develop this feature you should know that your bot will reply with a heart whatever the customers ask It s somehow uncomfortable if your customer complains to your bot then it shows a heart sticker How to Use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose Instagram Sticker 4 Click Create Available Soon Private Replies About Your customers can receive automatic replies in their Instagram DMs considered private whenever they comment on your brand Instagram post It is a powerful tool to reach your customer faster and privately whenever they complain or praise your brand How to Use You will apply it in the intent feature to trigger automatic replies from Instagram Posts We will update further announcements in this documentation or newsletter Deploy your chatbot Go to the tutorial for creating a simple Instagram DM chatbot tutorials create igdm bot handover from chatbot to agent FAQ I have 2 IGDM bot actions image type and text type The first response will show an image then a text However after I deploy the IG channel it offers a text then an image Why did it happen A Because the API calls limit in Instagram Facebook policy link has a maximum of 5 outgoing messages in 1 second Hence loading the image and showing it to the end user took a delay in between and the impacted image action type didn t show in the correct order You cannot avoid it We suggest you put a good UX conversation to display the image between text since the image will have an incorrect order than the Platform emulator It is the end of the guidance You can contact support kata ai mailto support kata ai if you have any difficulties when implementing this",
      "excerpt": "Automate your Instagram DM conversation using our flow builder in the Kata Platform Create bots to reply to customers with text images quick replies generic template ice breaker and coming soon",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.456Z",
        "lastModified": "2022-06-07T01:36:57.456Z",
        "size": 9156,
        "formattedSize": "8.9 KB",
        "absolutePath": "/tutorials/how-to-use-instagram-messaging-automation-in-your-project"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-use-instagram-messaging-automation-in-your-project",
      "title": "How to use Instagram Messaging automation in your project",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-ig-automation.webp",
      "date": "2021-08-26T07:00:00+07:00"
    },
    {
      "contents": "Qiscus is an AI compliant secure and flexible chat SDK for apps and websites They also provide a multichannel customer service chat solution that is now popular This section will learn how to connect our bot with Qiscus through the following steps Deploy your chatbot 1 Click the Deploy menu in the left sidebar 2 On the Deploy page click on the New Deployment button in the top right corner It will open up the Create Deployment menu 3 Choose any deployment version you want to deploy and fill in the changelog 4 Click Submit to finish the deployment If you already have an environment created skip these steps 1 Go to the Deployments gt Environment menu 2 Click the Create Environment button in any environment You will see a drawer to create a new environment 3 Choose the development version you want in this tutorial we use the 1 0 0 version 4 Fill in the environment URL This environment URL is used for CMS Learn more about CMS 5 Click Create to create the environment 6 Created environment now has a Create Channel button Continue to choose Freshchat as a chatbot channel 1 Click the Create Channel button to start adding channels to the environment It will open up the Channel menu within the environment 2 Click the Create Channel button in the channel table list It will show a menu to set up the channel 3 Choose Qiscus in Channel Type Field Name Functionality Limitation Name Your channel name Max 30 characters must contain only alphanumeric characters A Z a z 0 9 and _ Secret Key Key credential from Qiscus Bot Token Key credential from Qiscus Bot Email Registered email that has Qiscus inbox for chatbo Email only URL Registered email that has Qiscus inbox for chatbot HTTPS website only To fill in the secret key bot email and URL you need to set up a Qiscus inbox So let s start Register and login to Qiscus 1 Register to Qiscus Multichannel Chat Website to create a new app You will be asked to fill in the information regarding your account 2 As soon as you sign up you will get an email verification from Qiscus Multichannel Chat that you need to verify before using it So check your email and verify it 3 After verifying your account you can log into the Qiscus Multichannel Chat dashboard via the login page Please fill in your credentials to get into the dashboard 4 Then go to the Integration page Set up Qiscus integration 1 Enable the Qiscus Widget tab like shown in the picture below 2 Copy the snippet code shown on the page and paste it into your website HTML You can open your HTML later after you integrate the bot 3 Next you need to integrate the bot by enabling the Bot Integration in the Integration Page 4 On this page you will see Agent ID App ID Qiscus Secret Key and URL required in Kata Platform to deploy the Qiscus bot Copy all fields The next step is to paste the Agent ID App ID Qiscus Secret Key and URL from Qiscus to the Kata Platform 1 Go back to Kata Platform 2 Paste the Agent ID App ID Qiscus Secret Key and URL there Here is the example 3 Click Create to generate the webhook You can see a webhook URL from the generated channel 4 Click the copy icon to copy the webhook URL Finalize Qiscus set up 1 Go back to Qiscus dashboard 2 Then go to the Bot Integration tab Make sure you ve enabled it 3 Next paste the webhook URL in Bot Webhook URL 4 Finally click Connect This is the end of the guidance You can contact support kata ai if you have any difficulties when implementing this",
      "excerpt": "Qiscus is an AI compliant secure and flexible chat SDK for apps and websites They also provide a multichannel customer service chat solution that is now popular This section will learn",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.456Z",
        "lastModified": "2022-06-07T01:36:57.456Z",
        "size": 7776,
        "formattedSize": "7.6 KB",
        "absolutePath": "/tutorials/how-to-use-qiscus-omnichannel-to-your-chatbot"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-use-qiscus-omnichannel-to-your-chatbot",
      "title": "How to use Qiscus omnichannel to your chatbot",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-qiscus.webp",
      "date": "2021-08-26T07:00:00+07:00"
    },
    {
      "contents": "Slack is a messaging platform that is commonly used for office and community In this tutorial you will learn how to deploy your chatbot to the Slack channel So let s get started Deploy your chatbot 1 Click Deploy menu in the left sidebar 2 On the Deploy page click on the New Deployment button in the top right corner It will open up the Create Deployment menu 3 Choose any deployment version you want to deploy and fill in the changelog 4 Click Submit to finish the deployment If you already have an environment created skip these steps 1 Go to the Deployments gt Environment menu 2 Click the Create Environment button in any environment You will see a drawer to create a new environment 3 Choose the development version you want in this tutorial we use the 1 0 0 version 4 Fill in the environment URL This environment URL is used for CMS Learn more about CMS 5 Click Create to create the environment 6 Created environment now has a Create Channel button Continue to choose Slack as a chatbot channel 1 Click the Create Channel button to start adding channels to the environment It will open up the Channel menu within the environment 2 Click the Create Channel button in the channel table list A menu to set up the channel will be shown 3 Choose Slack in Channel Type Field Name Functionality Limitation Name Your channel name Max 30 characters must contain only alphanumeric characters A Z a z 0 9 and _ Bot Token Slack token Create Slack app 1 First thing first you need to sign in into your Slack Team to create a new app and get its token After logging in open this URL 2 Click Start here button then click on Create a Slack app button 3 Fill in the required fields Next choose your Development Slack Team 4 Click the Create App button 5 From Basic Information in the App Credentials section you can see the Verification Token You will use it later to deploy our bot 6 Open OAuth amp Permissions in the Scopes section You should fill in the scope permission by adding below scopes 7 Open Bot User in Features from the sidebar menu Fill the Display name and Default username of your bot Also turn on the Always Show My Bot as Online toggle 8 Click the Add Bot User button to finish 9 Go back to OAuth amp Permissions then select Install App to Workspace 10 Click the Allow button 11 Still in the Oauth amp Permissions you will get OAuth Access Token and Bot User OAuth Access Token Copy this Bot User OAuth Access Token to deploy our bot using the Kata Platform Next step is to paste the access token from Slack to the Kata Platform 1 Go back to Kata Platform 2 Paste the App Secret there Here is the example 3 Click Create to generate the webhook You can see a webhook URL from the generated channel 4 Click the copy icon to copy the webhook URL Finalize Slack set up 1 Go back to Slack 2 Then click on the Event Subscriptions tab 3 Next turn on the Enable Events toggle 4 You will see the Request URL field Then paste the webhook URL 5 Expand the Subscribe to bot events then add the selected User Event like in the below image 6 Now you can search for your bot in your slack Workspace 7 Finally you can now share your newly created chatbot with your friends This is the end of the guidance you can contact support kata ai if you have any difficulties when implementing this",
      "excerpt": "Slack is a messaging platform that is commonly used for office and community In this tutorial you will learn how to deploy your chatbot to the Slack channel So let s",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.456Z",
        "lastModified": "2022-06-07T01:36:57.456Z",
        "size": 9714,
        "formattedSize": "9.5 KB",
        "absolutePath": "/tutorials/how-to-use-slack-as-your-chatbot-messaging-platform"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-use-slack-as-your-chatbot-messaging-platform",
      "title": "How to use Slack as your chatbot messaging platform",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-slack.webp",
      "date": "2021-08-26T07:00:00+07:00"
    },
    {
      "contents": "Telegram is a free messaging platform that is commonly used for chatbot deployment This tutorial will learn how to deploy your chatbot in Telegram So let s get started Create a deployment Deployment is a step to merge all Revisions in Flow NLU and CMS so that you can integrate bots into the channel Before starting channel integration chatbots must at least have 1 deployment 1 In the sidebar choose the Deploy menu Then select Overview 2 Click the New Deployment button Then it will show a form on the right screen 3 Choose the deployment version In the Kata Platform there are 3 deployment versions which are Major to deploy significant changes such as change chatbot use case Minor to deploy medium changes such as adding new features in your chatbot Patch to deploy small changes such as change copy in action 4 Then click the Submit button If deployment is successful then the interface will be shown like this The step after creating a deployment is to create an environment An environment is a zone in computer science that provides a place to run integrated applications For example Kata Platform has 3 environments development staging and production 1 Choose the menu Deploy then choose Environment 2 In this step you will create a Development environment Click the button Create Environment in the Development card 3 Fill in the environment then click Create Integration to a channel This step will create a chatbot integration with the Telegram messaging platform Telegram is a free messaging platform to deploy chatbots with a simple setup 1 In the Deploy gt Environment click the Create Channel button 2 You will redirect to the Create Channel page Click the Create Channel button to create a new channel 3 Fill in the channel name and choose type as Telegram To fill in the Bot User OAuth Access Token field we must set up a chatbot in Telegram first The next step is to open your Telegram application and log in Before you start you need a Telegram account already registered and logged in to your application Connect chatbot to Telegram 1 The first step is to register your bot to the BotFather account 2 Type newbot and BotFather will ask for your chatbot name Feel free to use any name you like 3 After that you will be asked to enter your chatbot username Remember that your bot username has to either start or end with bot 4 Once finished BotFather will respond with a bot token to access the Telegram Bot API 5 Go back to Platform then copy the bot access token into the channel drawer 6 Click Create to get a webhook from the Kata Platform Then click the copy button to copy the webhook URL 7 Click on the webhook link to View Channel detail It will show a drawer to copy the access token and webhook URL 8 Next open a new tab on your browser and enter this URL Change my_bot_token into your own bot token Also paste kata_platform_webhook_url with the copied webhook URL 9 Click Go or press Enter on the keyboard 10 If you see the message Webhook was set you re all set Let s try our chatbot Open Telegram on the desktop or mobile and start chatting with your bot It is the end of this guidance You can contact support kata ai mailto support kata ai if you have any difficulties when implementing this",
      "excerpt": "Telegram is a free messaging platform that is commonly used for chatbot deployment This tutorial will learn how to deploy your chatbot in Telegram So let s get started Create a",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.456Z",
        "lastModified": "2022-06-07T01:36:57.456Z",
        "size": 7648,
        "formattedSize": "7.5 KB",
        "absolutePath": "/tutorials/how-to-use-telegram-as-your-chatbox-messaging-platform"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-use-telegram-for-your-chatbot",
      "title": "How to use Telegram as your chatbot messaging platform",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-telegram.webp",
      "date": "2021-08-26T07:00:00+07:00"
    },
    {
      "contents": "Automate your WhatsApp conversation by using our flow builder in the Kata Platform Create bots to reply to end users with several bot action types Text Image and Image with Caption NEW List Message NEW Reply Button Bot response types Text About Reply to your chatbot users end users by sending them text as a primary response Here is an example of a text response to end users How to Use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose Text and enter the text you want to send 4 Click Create Action to finalize your action Image and Image with Caption About Send images to your users on WhatsApp You can also add a caption for the image Here is an example of image response and using caption to end users How to Use 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose Image and enter the Image and Thumbnail URL 4 The image caption is optional 5 Click Create Action to finalize your action NEW List Message About Send a list of options your users can choose You can provide up to 10 options rows from a List Message Here is an example of a List Message response to end users Composition 1 Header type 2 Header composition 3 Section and Row How to Use Follow these steps to create a new List Message 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose List Message This action type only works on WhatsApp Adding this on other channels will result in an error 4 Fill in the fields 5 You should know some critical notes on List Message 1 Section has no limit You can add as many sections as you want 2 You can create up to 10 rows 3 Row ID in the same section must be unique For example 1 You make a section called FAQ Topics 2 Inside FAQ Topics you have 3 rows 3 Those 3 rows inside FAQ Topics can t use the same ID 6   Click Create Action to finalize your action After end users click any options the bot must execute a response based on the clicked option You can map the selected option by end users using row title or row id Using row title For example context chosen payload postback title Using row id For example context chosen payload postback id NEW Reply Button About The reply button allows users to send a reply to the chatbot quickly In addition you can create up to 3 buttons Here are examples of Reply Button responses to end users How to Use Follow these steps to create a new Reply Button 1 Go to the Kata Platform and select your project 2 Click to Flow gt Conversation Flow gt State gt Action List 3 Choose Reply Button This action type only works on WhatsApp Adding this on other channels will result in an error 4 Fill in the fields Some critical notes on the Reply button that you should know 1 Button ID must be unique when creating action 2 The maximum number of buttons is 3 buttons 3 Header type video only allows mp4 extension and we recommend the size is lt 5 MB because end users may experience slow connection when loading the video 4 Header types image video and document must use HTTP HTTPS link 5 Click Create Action to finalize your action After end users click any button the bot must execute a response based on the clicked button You can map the selected button by end users using button title or button id Using button title For example context chosen payload postback title Using button id For example context chosen payload postback id How to deploy You can create a simple bot using text by following this bot tutorial Start your first chatbot kata platform documentation content start your first chatbot You can deploy your bot by following these steps Create a deployment 1 Click the Deploy menu in the left sidebar 2 On the Deploy page click on the New Deployment button in the top right corner It will open up the Create Deployment menu 3 Choose any deployment version you want to deploy and fill in the changelog 4 Click Submit to finish the deployment Create a new environment If you already have an environment created skip these steps 1 Go to the Deployments gt Environment menu 2 Click the Create Environment button in any environment You will see a drawer to create a new environment 3 Choose the development version you want in this tutorial we use the 1 0 0 version 4 Fill in the environment URL This environment URL is used for CMS Learn more about CMS 5 Click Create to create the environment 6 Created environment now has a Create Channel button Create WhatsApp business account You can only deploy bots to a verified WhatsApp Business number To get the number you have to 1 Go to 2 Create a business dashboard account business dashboard get started 3 Register your new WhatsApp number business dashboard how to register Then you re ready to get the access token from your WhatsApp business account 1 In Business Dashboard go to the Whatsapp Numbers menu 2 Then click the WhatsApp number you want to deploy You will redirect to the Manage WhatsApp Number page 3 In the Manage WhatsApp Number page scroll down to API Credential 4 Next you will need to download Postman to hit the WhatsApp API 5 Copy the username and password from the API Credential section in the Business Dashboard into Postman 6 Open Postman and fill in the URL as follows URL POST 7 Enter the username and password from Business Dashboard to the Body Examples Body username amanda123 password Q1w2e3r4 kata 8 Click Send in Postman You will get the access token as shown 9 Copy the access token in the API result and save it next Finalize deployment WhatsApp channel 1 Log in to Kata Platform 2 Click your project that already had a chatbot and deployed 3 Then go to the menu Deploy gt Environment 4 Click the Create Channel button to start adding channels to the environment It will open up the Channel menu within the environment 5 Click the Create Channel button in the channel table list It will show a menu to set up the channel 6 Choose WhatsApp in Channel Type 7 Paste the access token into the field and enter in the URL field 8 Click Save to deploy your bot You re all set Now you can start chatting with your WhatsApp bot It is the end of the guidance You can contact support kata ai if you have any difficulties when implementing this",
      "excerpt": "Automate your WhatsApp conversation by using our flow builder in the Kata Platform Create bots to reply to end users with several bot action types Text Image and Image with Caption",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.457Z",
        "lastModified": "2022-06-07T01:36:57.457Z",
        "size": 14956,
        "formattedSize": "14.6 KB",
        "absolutePath": "/tutorials/how-to-use-whatsapp-business-api-in-my-chatbot"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "how-to-use-whatsapp-business-api-in-my-chatbot",
      "title": "How to use WhatsApp Business API in my chatbot",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-business-dashboard.webp",
      "date": "2021-10-25T07:00:00+07:00"
    },
    {
      "contents": "Introduction CMS Studio allows you to build a dashboard for your chatbot This dashboard lets your clients to add edit or remove certain contents of your bot Previously from Bot studio tutorial tutorials bot studio we have learned how to create a Pizza Bot So in this tutorial we will learn how to set up a dashboard where your clients can edit bot response for confirmPizza and Fallback state Before we begin you need to read CMS Studio cms studio about docs to learn the basic concepts of CMS Studio Set up CMS Studio We assume at this stage you already deployed your bot If you haven t you can learn how to on Bot studio tutorial tutorials bot studio Create Environment Click on Create Environment Environment URL will be used as a web address where your client can access the dashboard For demo purpose we will name it my cms Click on Create to submit data Successfully created environment will be seen as follow Create CMS Pages and Forms Go to CMS menu and select Pages This menu is a place for you to arrange pages forms and elements Click button to start a new page In this use case we will create a page named Text Response with label textResponse Click Create then enter the page There is a breadcrumb on top left to indicate which page you are in Click on button to create a form Fill in the fields as follows Then click on Order Pizza form you ve just created Introduction to Text Box Element For the first use case we will use Text Box elements to change bot response in confirmPizza State Click on Text Box element in left sidebar to add it to your form Added element is shown as above Our next step is to fill in label and ID and default value Label is a title for the element so try to use any word that is easy to understand ID is used to define the element in bot Every element s ID is unique and will be used as a code later on Default value is the value you want to put on the bot for example the copywriting Add Asking Confirmation Text to Form Fill in text box element as follow Add Fallback Text to Form Fill in text box element as follow Then click on Save button to save the structure Publish CMS After you saved your CMS structure go to Pages Afterwards click Publish Publish is a term that similar with commit in Git You must publish your saved CMS before you create a deployment Further explanation can be seen on Deployment Guide deployment guide introduction Invite User to CMS Client You can only invite Kata Platform users to Kata Dashboard So make sure your client already has registered account on Kata Platform before you invite them In the future update we will support inviting non Kata Platform users Click on Users menu under CMS Studio Then click on Add User button Next Add User drawer will show Fill in e mail and choose Development environment Then click Add to send an invitation to that user s email Integrate Elements to Bot There are 3 things that we have defined on CMS which are Page_label in Page ex textResponse Form_label in Form ex orderPizza ID in Element ex askingConfirmation This information will be used in Bot Studio to sync a value from your dashboard To do that we have to enter a code with this format on the action we want to sync cms page_label form_label element_ID value Change Value in confirmPizza State In this case this is what we will put on confirmPizza action on Bot Studio cms textResponse orderPizza askingConfirmation value To update the action you have to go back to Bot Studio and click on confirmPizza state Then click on confirmPizza state Replace the original text which is this Do you want to order context pizza with this code cms textResponse orderPizza askingConfirmation value Click Update Action to update your action Then click on Update to update state Change Value in Fallback State Click on init state in fallback flow Click on init state to update the action s value Fill in the value as follows cms textResponse orderPizza sorryMessage value Click Update Action to update your action Then click on Update to update state Publish Your Bot Afterward publish your bot by clicking Publish Deploy CMS amp Bot Revision Go to Deploy menu to deploy the newest version of your bot Click on New Deployment choose any deployment version and fill in change log Then click on Submit Then go to Environment to change deployment Click on more button to update Next click Update Update environment drawer will appear Choose latest deployment then click Update Changes will be shown as follow Customize Content in CMS Client Your invited user will receive an email containing the dashboard s URL or you can give them direct URL yourselves Enter CMS using E mail If you get an e mail click on Accept Invitation then you will be redirected to login page Enter CMS using Link Click on link for CMS client such as dashboard kata ai namespace For this tutorial we will access The front page of Kata Dashboard looks like this Click on Login after you filled in username e mail and password Edit Content in CMS Client Click on available form which is Order Pizza Fill in those elements with sentences that you want For example Asking confirmation You re almost done Do you want to order context pizza Fallback Hmm I don t understand that How about we talk other things Click on Save icon to save in each element Show Changes in LINE After you changed your deployment in environment you can test directly in your bot s LINE account Testing for confirmation Testing for fallback",
      "excerpt": "Introduction CMS Studio allows you to build a dashboard for your chatbot This dashboard lets your clients to add edit or remove certain contents of your bot Previously from Bot studio",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.457Z",
        "lastModified": "2022-06-07T01:36:57.457Z",
        "size": 10356,
        "formattedSize": "10.1 KB",
        "absolutePath": "/tutorials/integration-chatbot-with-cms-studio"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "integration-chatbot-with-cms-studio",
      "title": "Integration Chatbot with Kata CMS",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-cms-integration.webp",
      "prev": "integration-chatbot-with-nl-studio",
      "next": "create-igdm-bot-handover-from-chatbot-to-agent"
    },
    {
      "contents": "Introduction In this tutorial we will create a simple conversation bot and integrated to NL studio For pre condition you must create a bot by follow this tutorial in here Bot studio tutorial tutorials bot studio You will create a NLModel which able to process pizza ordering orders Further explanation for NLStudio you may see in here NL Studio Guideline tutorials nl studio Let s start Create Entity Assumed you already logged in and visit your project Go to NL Studio menu by click NL menu Then click on Create Entity to start Click on Create Here is a view after you create intent entity Conduct Data Training After you created the entity the next step is data training You have to enter a sentence to train intent trait Click on Training menu Then you are able to enter sentence to train data Put a sentence I want to order pizza and press enter in your keyboard Afterward click on Add Trait and select intent order Next click Train button to train entity you has created The final display will look like this Entity shall train a lot for precisely understanding user s input if you re doing training data in several sentences If you ve done enough training you are able to try testing by click Test NLU button This feature will support you to predict more data Publish Your NL Then publish your NL for save training data and NL model Integration with NLUs Next step is start integration with your bot using created entity To get started go to Bot menu and click NLUs sub menu Click on Create NLU and fill in as follow NLUid is found in NL menu in Setting Click on NL menu then click Settings Afterward copy NLUid into NLUid field in Create NLU drawer as follow Click Create to continue Successfully created NLUs will be appeared as follow Integration with Bot Next go to Conversation Flows and click on tab Intents Select orderTxt that you ve created earlier to handle user input you may see this tutorial Bot studio tutorial tutorials bot studio then add a new classifier as below Click Update to save updated Intent Testing Your Bot Click on Publish bot to save your bot Voila your bot is successfully integrated Let s start in bot emulator",
      "excerpt": "Introduction In this tutorial we will create a simple conversation bot and integrated to NL studio For pre condition you must create a bot by follow this tutorial in here Bot",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.457Z",
        "lastModified": "2022-06-07T01:36:57.457Z",
        "size": 4840,
        "formattedSize": "4.7 KB",
        "absolutePath": "/tutorials/integration-chatbot-with-nl-studio"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "integration-chatbot-with-nl-studio",
      "title": "Integration Chatbot with NL Studio Tutorial",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-nl-studio-integration.webp",
      "prev": "nl-studio-tutorial",
      "next": "integration-chatbot-with-cms-studio",
      "date": "2018-09-09T07:00:00+07:00"
    },
    {
      "contents": "Introduction In Bot studio tutorial tutorials bot studio we learned how to make keyword based chatbot to order pizza However keyword based chatbot is not so smart In this tutorial we will learn how to enhance the chatbot using NL Studio Creating a NL Model with NL Studio Login to Kata platform Login to Kata Platform by entering your username and password Click Login to continue Create Entity Label After you entered to Kata Platform click on the project you ve created Then click on NLU on the side bar Next click Create Entity Entity has similar definition with NL Model It will help us to classify every input from users Now create an entity called intent that with 4 labels order askOptions confirm and cancel Further explanation about entity is explained in NL Studio Docs Create Entity Type In this entity type we will create an entity with dictionary type further explanation about entity dictionary type is explained in NL Studio Docs This entity will handle pizza type selection Add new entity and fill in the data as follows Then continue filling the dictionary by adding other types Create Entity Size Entity size is used to handle pizzas size In this entity we will use Belongs to feature which binds an entity under another entity further explanation about belongsTo usage is explained in NL Studio Docs We will put entity size under entity type In dictionary section enter a keyword as a prediction for input from users Create Entity Crust Next we will create an entity named crust to find out crust type on pizza We ll put it under entity type Enter the data as follows Create Entity Qty In pizza chatbot which we created earlier user must enter pizza number to purchase using regex regular expression Entity qty will use dictionary by entering numbers or keywords related to the number of pizzas ordered Add entity then fill in the form as follows Then fill in as below After you ve created entities try to train data using your defined entities Training Your Model To start training enter Training menu under NLU Enter a simple phrase like want pizza and press enter on your keyboard Then in this section you can start tagging and classifying text Click on Add Trait then select intent order Click Train to submit your dataset Then add a few more sentences to train more data You can follow this In our next example we will do partial tagging by entering text and doing text selection on the word we want to tag The process of selecting text can be done by blocking one or more words at a time using a cursor You can follow the example in this following picture On the sentence how much american all star select only on the word American all star Then select entity type to classify You can also enter a phrase I want American all star pizza two and bbq hand tossed one and tag it like this You may see a number beside an entity That number represents how accurate an entity identifies a phrase highest is 1 0 Try to tag more sentences Next we will define parent entity using BelongsTo Click on BelongsTo dropdown on small phrase then select Pepperoni Final result looks like this Testing NLU in Prediction Console Use Test NLU to test a dataset Enter a word such as i want two aas read aas means American All Star You can see the prediction result as you can see in this image Adjusting the Dataset When performing NLU prediction in Test NLU sometimes the prediction result is wrong incomplete or still has a low confidence score For example the sentence above should be tagged as intent order However prediction result has no prediction to order To improve or fix a prediction enter Log menu Enter Log Menu Go to Log menu under NLU On this page you will see previous dataset when you have predicted on Test NLU Fix The Prediction We will adjust the dataset Click on pencil icon which placed in left icon Then select intent order Click train to revise the prediction Trained data will be seen as follow You will receive a notification after you click Train Test NLU with data that has been fixed We will try to predict another dataset and see if the result has been improved Click Test NLU and enter a phrase hi do you sell aas Congratulations now you have learned how to train entity in NL Studio",
      "excerpt": "Introduction In Bot studio tutorial tutorials bot studio we learned how to make keyword based chatbot to order pizza However keyword based chatbot is not so smart In this tutorial we",
      "meta": {
        "createdAt": "2022-06-07T01:36:57.457Z",
        "lastModified": "2022-06-07T01:36:57.457Z",
        "size": 9297,
        "formattedSize": "9.1 KB",
        "absolutePath": "/tutorials/nl-studio"
      },
      "product": "kata-platform",
      "type": "tutorials",
      "id": "nl-studio",
      "title": "NL Studio Tutorial",
      "layout": "tutorial",
      "imgSpot": "/assets/images/tutorials/spot-nl-studio.webp",
      "prev": "bot-studio-tutorial",
      "next": "integration-chatbot-with-nl-studio",
      "date": "2018-08-08T07:00:00+07:00"
    }
  ]
}
